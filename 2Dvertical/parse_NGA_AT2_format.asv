function [ time_hist, meta] = parse_NGA_AT2_format(input_file, units)
% Parses the NGA AT2 format to a two-column time history
%
%
% Inputs:  input_file: Name of input file (as text)  '#######.AT2'
%          output_file: Name of output file (as text) 
%          units: Units of measurement 'g' | 'cm/s/s'
%
% Output: time_hist: 2-column time history [Time (s), Accel (cm/s/s)]
%         meta: All meta data from record in form of a data structure


data1 = importdata(input_file, '\n');

line2 = data1{2,1};

dum = regexpi(line2, '[,()]','split');
timedate = regexpi(dum{1,1}, '[ /]', 'split');

meta.filename = input_file;
meta.station_location = dum{1,2};
meta.station_name = dum{1,4};
meta.rotation_angle = str2double(dum{1,3});
meta.event_name = timedate{1,1};
meta.month = str2double(timedate{1,2});
meta.day = str2double(timedate{1,3});
meta.year = str2double(timedate{1,4});
if length(timedate) > 4
    meta.time = str2double(timedate{1,5});
else
    meta.time = [];
end
% Split 4th line
line4 = data1{4,1};
id = regexpi(line4, '[A-Z]');
dum = str2num(line4(1:id(1)-1)); %#ok<*ST2NM>
meta.npts = dum(1,1);
meta.dt = dum(1,2);

% Time series
time1 = cumsum(meta.dt .* ones(meta.npts,1)) - meta.dt;
acc_hist = [];
for i = 5:size(data1,1); %#ok<*FORPF>
    acc_hist = [acc_hist, str2num(data1{i,1})]; %#ok<AGROW>
end
switch units
    case 'g'
        time_hist = [time1, acc_hist'];
    otherwise
        time_hist = [time1, 981.0 .* acc_hist'];
end

% Write to output file
fid = fopen('gmr.tcl', 'wt');
for i = 1:size(time_hist,1)
    fprintf(fid, '%12.6f\n', time_hist(i,2));
end
fclose(fid);
return
end

