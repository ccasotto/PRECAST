clc
clear all
close all
pdm = dlmread('pdmWO.tcl');
type = 2; %Intensity measure level we want to use, 1=PGA in g, 2=Sa(T), 3=Sd(T)
noLSs = 3;
[DPM] = DamageProbabilityMatrix (pdm, noLSs);
iml = DPM(:,noLSs+1);
cumDamageStates = fragility(DPM, noLSs);
figure(4)
plot(iml, cumDamageStates(:,2),'b*');
grid off
hold on
plot(iml, cumDamageStates(:,3),'r+');
hold on
%Least Square method
stats = leastSquares(iml,cumDamageStates,type);
plot(iml,logncdf(iml,stats(1,1),stats(1,2)),'b')
hold on
plot(iml,logncdf(iml,stats(2,1),stats(2,2)),'r')
xlabel('Sa(Ty) [cm/s/]')
ylabel('Probability of Exceedance')
legend('LS1', 'LS2','LS1 Least Square','LS Least Square');
legend boxoff

%Maximum likelyhood method
IM = iml;
noAsset = 100;
[theta(1), beta(1)] = fn_mle_pc_probit(IM, noAsset, cumDamageStates(:,2)*noAsset);
[theta(2), beta(2)] = fn_mle_pc_probit(IM, noAsset, cumDamageStates(:,3)*noAsset);
x_vals = 0.01:0.1:3;
p_yielding = normcdf((log(iml/theta(1)))/beta(1)); % compute fragility function using equation 1 and estimated parameters
p_collapse = normcdf((log(iml/theta(2)))/beta(2));
hold on
plot(iml,p_yielding, '--b', 'linewidth', 2)
plot(iml,p_collapse, '--r', 'linewidth', 2)
% dlmwrite('stats.tcl',stats,'delimiter','	');


